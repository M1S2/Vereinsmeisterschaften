<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PlaceholderInfoBirthYear" xml:space="preserve">
    <value>Use these placeholders to insert the birth year.</value>
  </data>
  <data name="PlaceholderInfoCompetitionID" xml:space="preserve">
    <value>Use these placeholders to insert the competition ID.</value>
  </data>
  <data name="PlaceholderInfoCompetitionYear" xml:space="preserve">
    <value>Use these placeholders to insert the competition year.
This only works outside of tables.</value>
  </data>
  <data name="PlaceholderInfoDistance" xml:space="preserve">
    <value>Use these placeholders to insert the distance in m.</value>
  </data>
  <data name="PlaceholderInfoName" xml:space="preserve">
    <value>Use these placeholders to insert the complete name (&lt;first name&gt; &lt;last name&gt;).</value>
  </data>
  <data name="PlaceholderInfoResultListPlace" xml:space="preserve">
    <value>Use these placeholders to insert the place in the overall result list.</value>
  </data>
  <data name="PlaceholderInfoScore" xml:space="preserve">
    <value>Use these placeholders to insert the highest score.</value>
  </data>
  <data name="PlaceholderInfoSwimmingStyle" xml:space="preserve">
    <value>Use these placeholders to insert the swimming style.</value>
  </data>
  <data name="PlaceholderLegendAvailable" xml:space="preserve">
    <value>Placeholder available</value>
  </data>
  <data name="PlaceholderLegendAvailableWithPostfix" xml:space="preserve">
    <value>Placeholder available (with postfix up to this number)
e.g. "3" -&gt; %Name1%, %Name2%, %Name3% available beside %Name%</value>
  </data>
  <data name="PlaceholderLegendNotAvailable" xml:space="preserve">
    <value>Platzhalter nicht verf√ºgbar</value>
  </data>
  <data name="PlaceholderNameBirthYear" xml:space="preserve">
    <value>Birth Year</value>
  </data>
  <data name="PlaceholderNameGender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="PlaceholderNameCompetitionID" xml:space="preserve">
    <value>Competition ID</value>
  </data>
  <data name="PlaceholderNameCompetitionYear" xml:space="preserve">
    <value>Competition Year</value>
  </data>
  <data name="PlaceholderNameDistance" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="PlaceholderNameResultListPlace" xml:space="preserve">
    <value>Result List Place</value>
  </data>
  <data name="PlaceholderNameScore" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="PlaceholderNameSwimmingStyle" xml:space="preserve">
    <value>Swimming Style</value>
  </data>
  <data name="PlaceholderInfoGender" xml:space="preserve">
    <value>Use these placeholders to insert the gender.</value>
  </data>
  <data name="PlaceholderInfoGenderSymbol" xml:space="preserve">
    <value>Use these placeholders to insert the gender as symbol.</value>
  </data>
  <data name="PlaceholderNameName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PlaceholderNameGenderSymbol" xml:space="preserve">
    <value>Gender (Symbol)</value>
  </data>
  <data name="PlaceholderNameScoreBreaststroke" xml:space="preserve">
    <value>Score Breaststroke</value>
  </data>
  <data name="PlaceholderNameScoreFreestyle" xml:space="preserve">
    <value>Score Freestyle</value>
  </data>
  <data name="PlaceholderNameScoreBackstroke" xml:space="preserve">
    <value>Score Backstroke</value>
  </data>
  <data name="PlaceholderNameScoreButterfly" xml:space="preserve">
    <value>Score Butterfly</value>
  </data>
  <data name="PlaceholderNameScoreMedley" xml:space="preserve">
    <value>Score Medley</value>
  </data>
  <data name="PlaceholderNameTimeBackstroke" xml:space="preserve">
    <value>Time Backstroke</value>
  </data>
  <data name="PlaceholderNameTimeBreaststroke" xml:space="preserve">
    <value>Time Breaststroke</value>
  </data>
  <data name="PlaceholderNameTimeButterfly" xml:space="preserve">
    <value>Time Butterfly</value>
  </data>
  <data name="PlaceholderNameTimeFreestyle" xml:space="preserve">
    <value>Time Freestyle</value>
  </data>
  <data name="PlaceholderNameTimeMedley" xml:space="preserve">
    <value>Time Medley</value>
  </data>
  <data name="PlaceholderInfoScoreBackstroke" xml:space="preserve">
    <value>Use these placeholders to insert the backstroke score.</value>
  </data>
  <data name="PlaceholderInfoScoreBreaststroke" xml:space="preserve">
    <value>Use these placeholders to insert the breaststroke score.</value>
  </data>
  <data name="PlaceholderInfoScoreButterfly" xml:space="preserve">
    <value>Use these placeholders to insert the butterfly score.</value>
  </data>
  <data name="PlaceholderInfoScoreFreestyle" xml:space="preserve">
    <value>Use these placeholders to insert the freestyle score.</value>
  </data>
  <data name="PlaceholderInfoScoreMedley" xml:space="preserve">
    <value>Use these placeholders to insert the medley score.</value>
  </data>
  <data name="PlaceholderInfoTimeBackstroke" xml:space="preserve">
    <value>Use these placeholders to insert the backstroke time.</value>
  </data>
  <data name="PlaceholderInfoTimeBreaststroke" xml:space="preserve">
    <value>Use these placeholders to insert the breaststroke time.</value>
  </data>
  <data name="PlaceholderInfoTimeButterfly" xml:space="preserve">
    <value>Use these placeholders to insert the butterfly time.</value>
  </data>
  <data name="PlaceholderInfoTimeFreestyle" xml:space="preserve">
    <value>Use these placeholders to insert the freestyle time.</value>
  </data>
  <data name="PlaceholderInfoTimeMedley" xml:space="preserve">
    <value>Use these placeholders to insert the medley time.</value>
  </data>
  <data name="PlaceholderInfoScoreWaterflea" xml:space="preserve">
    <value>Use these placeholders to insert the waterflea score.</value>
  </data>
  <data name="PlaceholderNameScoreWaterflea" xml:space="preserve">
    <value>Score Waterflea</value>
  </data>
  <data name="PlaceholderInfoTimeWaterflea" xml:space="preserve">
    <value>Use these placeholders to insert the waterflea time.</value>
  </data>
  <data name="PlaceholderNameTimeWaterflea" xml:space="preserve">
    <value>Time Waterflea</value>
  </data>
  <data name="PlaceholderNameBestStyle" xml:space="preserve">
    <value>Best Style</value>
  </data>
  <data name="PlaceholderInfoBestStyle" xml:space="preserve">
    <value>Use these placeholders to insert the style of the start with the highest score.</value>
  </data>
  <data name="PlaceholderNameFirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="PlaceholderNameLastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="PlaceholderInfoFirstName" xml:space="preserve">
    <value>Use these placeholders to insert the first name.</value>
  </data>
  <data name="PlaceholderInfoLastName" xml:space="preserve">
    <value>Use these placeholders to insert the last name.</value>
  </data>
  <data name="PlaceholderNameAppVersion" xml:space="preserve">
    <value>App Version</value>
  </data>
  <data name="PlaceholderInfoAppVersion" xml:space="preserve">
    <value>Use these placeholders to insert the application version.</value>
  </data>
  <data name="PlaceholderNameWorkspacePath" xml:space="preserve">
    <value>Workspace Path</value>
  </data>
  <data name="PlaceholderInfoWorkspacePath" xml:space="preserve">
    <value>Use these placeholders to insert the path to the workspace.</value>
  </data>
  <data name="PlaceholderInfoRaceNumber" xml:space="preserve">
    <value>Use these placeholders to insert the number of the race beginning with 1.</value>
  </data>
  <data name="PlaceholderNameRaceNumber" xml:space="preserve">
    <value>Race Number</value>
  </data>
  <data name="PlaceholderNameCompetitionDate" xml:space="preserve">
    <value>Competition Date</value>
  </data>
  <data name="PlaceholderInfoCompetitionDate" xml:space="preserve">
    <value>Use these placeholders to insert the competition date.
This only works outside of tables.</value>
  </data>
</root>