//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vereinsmeisterschaften.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Tooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Tooltips() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vereinsmeisterschaften.Properties.Tooltips", typeof(Tooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Browse for file or folder. ähnelt.
        /// </summary>
        public static string TooltipBrowse {
            get {
                return ResourceManager.GetString("TooltipBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Complete date on which the competition takes place.
        ///This is only used during document creation as info text. ähnelt.
        /// </summary>
        public static string TooltipCompetitionDate {
            get {
                return ResourceManager.GetString("TooltipCompetitionDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search mode that defines how the correct competition for a start is found. ähnelt.
        /// </summary>
        public static string TooltipCompetitionSearchMode {
            get {
                return ResourceManager.GetString("TooltipCompetitionSearchMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Year in which the competition takes place.
        ///This year is used to find the correct competition for each start. ähnelt.
        /// </summary>
        public static string TooltipCompetitionYear {
            get {
                return ResourceManager.GetString("TooltipCompetitionYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File types of documents that will be created. ähnelt.
        /// </summary>
        public static string TooltipDocumentFileTypes {
            get {
                return ResourceManager.GetString("TooltipDocumentFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output folder where the documents are created. ähnelt.
        /// </summary>
        public static string TooltipDocumentOutputFolder {
            get {
                return ResourceManager.GetString("TooltipDocumentOutputFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide resolved path ähnelt.
        /// </summary>
        public static string TooltipHideResolvedPath {
            get {
                return ResourceManager.GetString("TooltipHideResolvedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the LibreOffice soffice.exe used for PDF conversion. ähnelt.
        /// </summary>
        public static string TooltipLibreOfficePath {
            get {
                return ResourceManager.GetString("TooltipLibreOfficePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This start is using a competition that was selected, because the person is older than all available competitions for this style and gender.
        ///The competition with the highest age is used then. ähnelt.
        /// </summary>
        public static string TooltipMaxAgeCompetition {
            get {
                return ResourceManager.GetString("TooltipMaxAgeCompetition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of iterations the race variant calculation loop will run in the worst case.
        ///If the number of variants after calculation is reached earlier, the loop will break. ähnelt.
        /// </summary>
        public static string TooltipMaxRacesVariantCalculationLoops {
            get {
                return ResourceManager.GetString("TooltipMaxRacesVariantCalculationLoops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only variants with a score higher or equal this value (in percent) are kept during calculation. ähnelt.
        /// </summary>
        public static string TooltipMinRacesVariantsScore {
            get {
                return ResourceManager.GetString("TooltipMinRacesVariantsScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This start is using a competition that was selected, because there was no available competition for this style and gender with the exact age of the person. ähnelt.
        /// </summary>
        public static string TooltipNotExactAgeCompetition {
            get {
                return ResourceManager.GetString("TooltipNotExactAgeCompetition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of available swim lanes.
        ///This is used during calculation of the race variants (determines the maximum number of parallel starts). ähnelt.
        /// </summary>
        public static string TooltipNumberOfSwimLanes {
            get {
                return ResourceManager.GetString("TooltipNumberOfSwimLanes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of variants after calculation.
        ///The number of variants to keep (marked with the pin icon) is subtracted before calculating the remaining elements. ähnelt.
        /// </summary>
        public static string TooltipNumberRacesVariantsAfterCalculation {
            get {
                return ResourceManager.GetString("TooltipNumberRacesVariantsAfterCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open document in default application. Open .pdf if available, otherwise use .docx. ähnelt.
        /// </summary>
        public static string TooltipOpenDocument {
            get {
                return ResourceManager.GetString("TooltipOpenDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All available competitions are defined on this page.
        ///A competition is described by the style, the distance, the age, and a corresponding time. The time is then used to calculate points.
        ///If the swimmer achieves exactly the time entered here, they receive 100 points.
        ///If they swim slower, they receive fewer points; if they swim faster, they receive more.
        ///A corresponding competition must be available for each start. ähnelt.
        /// </summary>
        public static string TooltipPageInfoCompetitionPage {
            get {
                return ResourceManager.GetString("TooltipPageInfoCompetitionPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On this page, you can create various documents that are required before, during, or after the competition. The filter only applies to certificate creation.
        ///It also provides an overview of all available placeholders that can be used in the documents. ähnelt.
        /// </summary>
        public static string TooltipPageInfoCreateDocumentsPage {
            get {
                return ResourceManager.GetString("TooltipPageInfoCreateDocumentsPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All entries can be entered on this page.
        ///The registration requires the name, year of birth, and the desired style.
        ///A corresponding competition must also be entered for each style! Otherwise, the start will be ignored (also highlighted here). ähnelt.
        /// </summary>
        public static string TooltipPageInfoPeoplePage {
            get {
                return ResourceManager.GetString("TooltipPageInfoPeoplePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On this page, you can create a order for the starts. This can be done either manually (by adding a variant and manually dragging the starts from the right area to the middle) or automatically (variants are randomly created and evaluated according to various criteria).
        ///Each race variant is scored from 0% (poor) to 100% (perfect). In the workspace, you can set the weighting or various parameters for the automatic calculation.
        ///You can also highlight specific starts. For example, all of a person&apos;s starts to c [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string TooltipPageInfoPrepareRacesPage {
            get {
                return ResourceManager.GetString("TooltipPageInfoPrepareRacesPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This page displays the results from all starts (the number of points awarded for each swim time).
        ///It is also possible to determine the best swimmers in a particular style. ähnelt.
        /// </summary>
        public static string TooltipPageInfoResultsPage {
            get {
                return ResourceManager.GetString("TooltipPageInfoResultsPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For each start, you can enter the swim time here (in minutes, seconds, and tenths of a second).
        ///Various filter options are available. ähnelt.
        /// </summary>
        public static string TooltipPageInfoTimeInputPage {
            get {
                return ResourceManager.GetString("TooltipPageInfoTimeInputPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The workspace is a folder where all settings, competitions, and people are saved. It&apos;s a good idea to create a new folder for each competition (e.g. each year). It doesn&apos;t matter where the folder is located on the hard drive.
        ///
        ///The following files are created:
        ///- WorkspaceSettings.json: JSON file with all settings for the workspace.
        ///- Person.csv: List of all people and swim times.
        ///- Competitions.csv: List of all available competitions.
        ///- BestRace.csv: The race marked as a good option is saved here. If n [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string TooltipPageInfoWorkspacePage {
            get {
                return ResourceManager.GetString("TooltipPageInfoWorkspacePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String marker for placeholders in the template files. The placeholder must be enclosed by this marker.
        ///e.g. PlaceholderMarker = &quot;%&quot; --&gt; %PLACEHOLDER% ähnelt.
        /// </summary>
        public static string TooltipPlaceholderMarker {
            get {
                return ResourceManager.GetString("TooltipPlaceholderMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style backstroke during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleBackstroke {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleBackstroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style breaststroke during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleBreaststroke {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleBreaststroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style butterfly during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleButterfly {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleButterfly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style breaststroke during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleFreestyle {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleFreestyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style medley during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleMedley {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleMedley", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Priority used for style waterflea during score calculation (step style order).
        ///Lower numbers should start earlier. ähnelt.
        /// </summary>
        public static string TooltipPriorityStyleWaterflea {
            get {
                return ResourceManager.GetString("TooltipPriorityStyleWaterflea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This variant contains errors. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantContainsError {
            get {
                return ResourceManager.GetString("TooltipRaceVariantContainsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Persist this variant to a file. Only one variant can be marked as persistent at a time. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantIsPersistentIcon {
            get {
                return ResourceManager.GetString("TooltipRaceVariantIsPersistentIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable this to persist this variant to a file. Only one variant can be marked as persistent at a time. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantIsPersistentToggleButton {
            get {
                return ResourceManager.GetString("TooltipRaceVariantIsPersistentToggleButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keep this variant while calculating new race variants. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantKeepWhileCalculation {
            get {
                return ResourceManager.GetString("TooltipRaceVariantKeepWhileCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable this to keep this variant while calculating new race variants. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantKeepWhileCalculationToggleButton {
            get {
                return ResourceManager.GetString("TooltipRaceVariantKeepWhileCalculationToggleButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of fractional digits to use for the score.
        ///The score is directly rounded while calculation, so that all occurences use the same number of digits. ähnelt.
        /// </summary>
        public static string TooltipScoreFractionalDigits {
            get {
                return ResourceManager.GetString("TooltipScoreFractionalDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show resolved path ähnelt.
        /// </summary>
        public static string TooltipShowResolvedPath {
            get {
                return ResourceManager.GetString("TooltipShowResolvedPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This string is removed from the template file name to get the final output file name.
        ///If filters are used during document creation, this string defines the place where the filter criteria are inserted in the output file name.
        ///
        ///e.g. Template File: &quot;Certificates_Template.docx&quot;,
        ///Template Postfix: &quot;_Template&quot;
        ///-&gt; Output file (without filters): &quot;Certificates.docx&quot;
        ///-&gt; Output file (with filters by style): &quot;Certificates_Breaststroke.docx&quot; ähnelt.
        /// </summary>
        public static string TooltipTemplateFilenamePostfix {
            get {
                return ResourceManager.GetString("TooltipTemplateFilenamePostfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the certificate template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathCertificate {
            get {
                return ResourceManager.GetString("TooltipTemplatePathCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the overview list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathOverviewList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathOverviewList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the race start list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathRaceStartList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathRaceStartList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the result list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathResultList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathResultList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the result list detail template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathResultListDetail {
            get {
                return ResourceManager.GetString("TooltipTemplatePathResultListDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the time forms template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathTimeForms {
            get {
                return ResourceManager.GetString("TooltipTemplatePathTimeForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of digits for the time input Millisecond. ähnelt.
        /// </summary>
        public static string TooltipTimeInputMillisecondDigits {
            get {
                return ResourceManager.GetString("TooltipTimeInputMillisecondDigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight for the score for person pauses (The more pause between the starts of a person the better). ähnelt.
        /// </summary>
        public static string TooltipWeightPersonStartPauses {
            get {
                return ResourceManager.GetString("TooltipWeightPersonStartPauses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight for the score for same styles in sequence (The more consecutive races with the same style the better). ähnelt.
        /// </summary>
        public static string TooltipWeightSameStyleSequence {
            get {
                return ResourceManager.GetString("TooltipWeightSameStyleSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight for the score for single starts (The less races with only one start the better). ähnelt.
        /// </summary>
        public static string TooltipWeightSingleStarts {
            get {
                return ResourceManager.GetString("TooltipWeightSingleStarts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight for the score for start genders (Homogenous genders in starts are better than heterogeneous ones). ähnelt.
        /// </summary>
        public static string TooltipWeightStartGenders {
            get {
                return ResourceManager.GetString("TooltipWeightStartGenders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weight for the score for style order (There is a preferred order for the styles. The more the races follow this order, the better.). ähnelt.
        /// </summary>
        public static string TooltipWeightStyleOrder {
            get {
                return ResourceManager.GetString("TooltipWeightStyleOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close the current workspace. If there are unsaved changes, there will be a dialog before closing. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceClose {
            get {
                return ResourceManager.GetString("TooltipWorkspaceClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open a workspace and load all settings, persons, competitions... ähnelt.
        /// </summary>
        public static string TooltipWorkspaceOpen {
            get {
                return ResourceManager.GetString("TooltipWorkspaceOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open the folder of the current workspace in the windows explorer. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceOpenInExplorer {
            get {
                return ResourceManager.GetString("TooltipWorkspaceOpenInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save all workspace settings, persons, competitions, ... to a file. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceSave {
            get {
                return ResourceManager.GetString("TooltipWorkspaceSave", resourceCulture);
            }
        }
    }
}
