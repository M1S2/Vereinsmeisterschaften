//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vereinsmeisterschaften.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Tooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Tooltips() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Vereinsmeisterschaften.Properties.Tooltips", typeof(Tooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Year in which the competition takes place ähnelt.
        /// </summary>
        public static string TooltipCompetitionYear {
            get {
                return ResourceManager.GetString("TooltipCompetitionYear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File types of documents that will be created. ähnelt.
        /// </summary>
        public static string TooltipDocumentFileTypes {
            get {
                return ResourceManager.GetString("TooltipDocumentFileTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output folder where the documents are created. ähnelt.
        /// </summary>
        public static string TooltipDocumentOutputFolder {
            get {
                return ResourceManager.GetString("TooltipDocumentOutputFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the LibreOffice soffice.exe used for PDF conversion. ähnelt.
        /// </summary>
        public static string TooltipLibreOfficePath {
            get {
                return ResourceManager.GetString("TooltipLibreOfficePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of iterations the race variant calculation loop will run in the worst case.
        ///If the number of variants after calculation is reached earlier, the loop will break. ähnelt.
        /// </summary>
        public static string TooltipMaxRacesVariantCalculationLoops {
            get {
                return ResourceManager.GetString("TooltipMaxRacesVariantCalculationLoops", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only variants with a score higher or equal this value (in percent) are kept during calculation. ähnelt.
        /// </summary>
        public static string TooltipMinRacesVariantsScore {
            get {
                return ResourceManager.GetString("TooltipMinRacesVariantsScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of available swim lanes.
        ///This is used during calculation of the race variants (determines the maximum number of parallel starts). ähnelt.
        /// </summary>
        public static string TooltipNumberOfSwimLanes {
            get {
                return ResourceManager.GetString("TooltipNumberOfSwimLanes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of variants after calculation.
        ///The number of variants to keep (marked with the pin icon) is subtracted before calculating the remaining elements. ähnelt.
        /// </summary>
        public static string TooltipNumberRacesVariantsAfterCalculation {
            get {
                return ResourceManager.GetString("TooltipNumberRacesVariantsAfterCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String marker for placeholders in the template files. The placeholder must be enclosed by this marker.
        ///e.g. PlaceholderMarker = &quot;%&quot; --&gt; %PLACEHOLDER% ähnelt.
        /// </summary>
        public static string TooltipPlaceholderMarker {
            get {
                return ResourceManager.GetString("TooltipPlaceholderMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This variant contains errors. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantContainsError {
            get {
                return ResourceManager.GetString("TooltipRaceVariantContainsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Persist this variant to a file. Only one variant can be marked as persistent at a time. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantIsPersistentIcon {
            get {
                return ResourceManager.GetString("TooltipRaceVariantIsPersistentIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable this to persist this variant to a file. Only one variant can be marked as persistent at a time. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantIsPersistentToggleButton {
            get {
                return ResourceManager.GetString("TooltipRaceVariantIsPersistentToggleButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keep this variant while calculating new race variants. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantKeepWhileCalculation {
            get {
                return ResourceManager.GetString("TooltipRaceVariantKeepWhileCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable this to keep this variant while calculating new race variants. ähnelt.
        /// </summary>
        public static string TooltipRaceVariantKeepWhileCalculationToggleButton {
            get {
                return ResourceManager.GetString("TooltipRaceVariantKeepWhileCalculationToggleButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the certificate template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathCertificate {
            get {
                return ResourceManager.GetString("TooltipTemplatePathCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the overview list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathOverviewList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathOverviewList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the race start list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathRaceStartList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathRaceStartList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the result list template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathResultList {
            get {
                return ResourceManager.GetString("TooltipTemplatePathResultList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the result list detail template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathResultListDetail {
            get {
                return ResourceManager.GetString("TooltipTemplatePathResultListDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Path to the time forms template. ähnelt.
        /// </summary>
        public static string TooltipTemplatePathTimeForms {
            get {
                return ResourceManager.GetString("TooltipTemplatePathTimeForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close the current workspace. If there are unsaved changes, there will be a dialog before closing. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceClose {
            get {
                return ResourceManager.GetString("TooltipWorkspaceClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open a workspace and load all settings, persons, competitions... ähnelt.
        /// </summary>
        public static string TooltipWorkspaceOpen {
            get {
                return ResourceManager.GetString("TooltipWorkspaceOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open the folder of the current workspace in the windows explorer. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceOpenInExplorer {
            get {
                return ResourceManager.GetString("TooltipWorkspaceOpenInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save all workspace settings, persons, competitions, ... to a file. ähnelt.
        /// </summary>
        public static string TooltipWorkspaceSave {
            get {
                return ResourceManager.GetString("TooltipWorkspaceSave", resourceCulture);
            }
        }
    }
}
