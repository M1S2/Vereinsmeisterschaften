<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TooltipRaceVariantIsPersistentToggleButton" xml:space="preserve">
    <value>Aktivieren, um diese Variante in eine Datei zu speichern. Nur eine Variante kann gleichzeitig als persistent markiert werden.</value>
  </data>
  <data name="TooltipRaceVariantKeepWhileCalculationToggleButton" xml:space="preserve">
    <value>Aktivieren, um diese Variante während der Berechnung von neuen Varianten zu behalten.</value>
  </data>
  <data name="TooltipRaceVariantIsPersistentIcon" xml:space="preserve">
    <value>Diese Variante in eine Datei speichern. Nur eine Variante kann gleichzeitig als persistent markiert werden.</value>
  </data>
  <data name="TooltipRaceVariantKeepWhileCalculation" xml:space="preserve">
    <value>Diese Variante während der Berechnung von neuen Varianten behalten.</value>
  </data>
  <data name="TooltipRaceVariantContainsError" xml:space="preserve">
    <value>Diese Variante enthält Fehler.</value>
  </data>
  <data name="TooltipNumberOfSwimLanes" xml:space="preserve">
    <value>Anzahl an verfügbaren Bahnen.
Wird verwendet während der Berechnung von neuen Renn-Varianten (um die maximale Anzahl an parallelen Starts zu ermitteln).</value>
  </data>
  <data name="TooltipNumberRacesVariantsAfterCalculation" xml:space="preserve">
    <value>Anzahl an Varianten nach der Berechnung.
Die Anzahl der Varianten, die behalten werden sollen (mit dem Pin Symbol markiert) werden vor der Berechnung abgezogen.</value>
  </data>
  <data name="TooltipMaxRacesVariantCalculationLoops" xml:space="preserve">
    <value>Maximale Anzahl an Schleifen während der Varianten Berechnung.
Wenn die Anzahl an Varianten früher erreicht wird, wird die Schleife früher abgebrochen.</value>
  </data>
  <data name="TooltipMinRacesVariantsScore" xml:space="preserve">
    <value>Nur Varianten mit einer Bewertung höher oder gleich diesem Wert in Prozent werden während der Berechnung behalten.</value>
  </data>
  <data name="TooltipCompetitionYear" xml:space="preserve">
    <value>Jahr in dem der Wettkampf stattfindet</value>
  </data>
  <data name="TooltipTemplatePathCertificate" xml:space="preserve">
    <value>Pfad zum Urkunden Template.</value>
  </data>
  <data name="TooltipDocumentOutputFolder" xml:space="preserve">
    <value>Ordner, in dem die Dokumente erstellt werden.</value>
  </data>
  <data name="TooltipTemplatePathOverviewList" xml:space="preserve">
    <value>Pfad zum Übersichtslisten Template.</value>
  </data>
  <data name="TooltipLibreOfficePath" xml:space="preserve">
    <value>Pfad zur LibreOffice soffice.exe, die zur PDF Konvertierung verwendet wird.</value>
  </data>
  <data name="TooltipTemplatePathRaceStartList" xml:space="preserve">
    <value>Pfad zum Renn-Startlisten Template.</value>
  </data>
  <data name="TooltipTemplatePathResultList" xml:space="preserve">
    <value>Pfad zum Ergebnislisten Template.</value>
  </data>
  <data name="TooltipTemplatePathTimeForms" xml:space="preserve">
    <value>Pfad zum Zeitzettel Template.</value>
  </data>
  <data name="TooltipWorkspaceOpen" xml:space="preserve">
    <value>Öffnet einen Arbeitsplatz und lädt alle Einstellungen, Personen, Wettkämpfe...</value>
  </data>
  <data name="TooltipWorkspaceOpenInExplorer" xml:space="preserve">
    <value>Öffnet den Ordner des aktuellen Arbeitsplatzes im Windows Explorer.</value>
  </data>
  <data name="TooltipWorkspaceSave" xml:space="preserve">
    <value>Speichert alle Arbeitsplatz Einstellungen, Personen, Wettkämpfe, ... in eine Datei.</value>
  </data>
  <data name="TooltipWorkspaceClose" xml:space="preserve">
    <value>Schließt den aktuellen Arbeitsplatz. Wenn es ungespeicherte Änderungen gibt, erscheint ein Dialog vor dem Schließen.</value>
  </data>
  <data name="TooltipTemplatePathResultListDetail" xml:space="preserve">
    <value>Pfad zum Ergebnislisten Detail Template.</value>
  </data>
</root>