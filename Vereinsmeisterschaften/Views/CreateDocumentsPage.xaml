<Page
    x:Class="Vereinsmeisterschaften.Views.CreateDocumentsPage"
    Style="{DynamicResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:userControls="clr-namespace:Vereinsmeisterschaften.Controls"
    xmlns:properties="clr-namespace:Vereinsmeisterschaften.Properties"
    xmlns:local="clr-namespace:Vereinsmeisterschaften.Views"
    xmlns:coreModels="clr-namespace:Vereinsmeisterschaften.Core.Models;assembly=Vereinsmeisterschaften.Core"
    xmlns:viewModels="clr-namespace:Vereinsmeisterschaften.ViewModels"
    xmlns:templateSelectors="clr-namespace:Vereinsmeisterschaften.TemplateSelectors"
    xmlns:behaviors="clr-namespace:Vereinsmeisterschaften.Behaviors"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    Dialog:DialogParticipation.Register="{Binding}"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>
        <Style x:Key="StyleCenteredGridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MahApps.Styles.GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Page.Resources>

    <Grid Margin="{StaticResource MediumLeftTopRightBottomMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="6" Orientation="Horizontal" VerticalAlignment="Center">
            <controls:FontIcon FontSize="40" Glyph="&#xE8A5;"/>
            <TextBlock Style="{StaticResource PageTitleStyle}" Text="{x:Static properties:Resources.CreateDocumentsPageTitle}" />
            <controls:FontIcon Margin="30,0,0,0" FontSize="25" Glyph="&#xF167;" Foreground="{DynamicResource MahApps.Brushes.Accent}" ToolTip="{x:Static properties:Tooltips.TooltipPageInfoCreateDocumentsPage}"/>
        </StackPanel>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Certificates -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="0"
                                         DocumentType="{x:Static coreModels:DocumentCreationTypes.Certificates}"
                                         CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                         IsRunning="{Binding IsDocumentCreationRunning[Certificates]}"
                                         IsSuccessful="{Binding IsDocumentCreationSuccessful[Certificates]}"
                                         IsDataAvailable="{Binding IsDocumentDataAvailable[Certificates]}"
                                         IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[Certificates]}"
                                         LastCreatedDocumentPath="{Binding LastDocumentFilePaths[Certificates]}"
                                         AvailableItemOrderings="{Binding AvailableItemOrderings[Certificates]}"
                                         ItemOrdering="{Binding CurrentItemOrderings[Certificates], Mode=TwoWay}"
                                         AvailableItemFilters="{Binding AvailableItemFilters[Certificates]}"
                                         ItemFilter="{Binding CurrentItemFilters[Certificates], Mode=TwoWay}"
                                         ItemFilterParameter="{Binding CurrentItemFilterParameters[Certificates], Mode=TwoWay}"
                                         ButtonText="{x:Static properties:Resources.CreateCertificatesString}"
                                         SuccessText="{x:Static properties:Resources.CreateCertificatesResultString}"
                                         ButtonIconGlyph="&#xE8A5;"
                                         NumberCreatedDocuments="{Binding NumberCreatedCertificates}">
            <local:CreateDocumentUserControl.FilterParameterEditorTemplateSelector>
                <templateSelectors:EnumTemplateSelector>
                    <templateSelectors:EnumTemplateSelector.Templates>
                        <!-- DataTemplate for person. This is only visible if filter is Person. -->
                        <DataTemplate x:Key="{x:Static coreModels:PersonStartFilters.Person}">
                            <ComboBox VerticalAlignment="Center" Style="{StaticResource MahApps.Styles.ComboBox}"
                                      ItemsSource="{Binding DataContext.AvailablePersons, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                                      SelectedItem="{Binding DataContext.CurrentItemFilterParameters[Certificates], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}, Mode=TwoWay}"/>
                        </DataTemplate>
                        <!-- DataTemplate for swimming style. This is only visible if filter is SwimmingStyle. -->
                        <DataTemplate x:Key="{x:Static coreModels:PersonStartFilters.SwimmingStyle}">
                            <ComboBox VerticalAlignment="Center" Style="{StaticResource MahApps.Styles.ComboBox}"
                                      ItemsSource="{Binding DataContext.AvailableSwimmingStyles, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}"
                                      SelectedItem="{Binding DataContext.CurrentItemFilterParameters[Certificates], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                        <!-- DataTemplate / Numeric input for Competition ID. This is only visible if filter is CompetitionID. -->
                        <DataTemplate x:Key="{x:Static coreModels:PersonStartFilters.CompetitionID}">
                            <controls:NumericUpDown VerticalAlignment="Center" Minimum="0"
                                    Value="{Binding DataContext.CurrentItemFilterParameters[Certificates], RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}, Mode=TwoWay}"/>
                        </DataTemplate>
                    </templateSelectors:EnumTemplateSelector.Templates>
                </templateSelectors:EnumTemplateSelector>
            </local:CreateDocumentUserControl.FilterParameterEditorTemplateSelector>
        </local:CreateDocumentUserControl>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Overview List -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="1"
                                         DocumentType="{x:Static coreModels:DocumentCreationTypes.OverviewList}"
                                         CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                         IsRunning="{Binding IsDocumentCreationRunning[OverviewList]}"
                                         IsSuccessful="{Binding IsDocumentCreationSuccessful[OverviewList]}"
                                         IsDataAvailable="{Binding IsDocumentDataAvailable[OverviewList]}"
                                         IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[OverviewList]}"
                                         LastCreatedDocumentPath="{Binding LastDocumentFilePaths[OverviewList]}"
                                         AvailableItemOrderings="{Binding AvailableItemOrderings[OverviewList]}"
                                         ItemOrdering="{Binding CurrentItemOrderings[OverviewList], Mode=TwoWay}"
                                         AvailableItemFilters="{Binding AvailableItemFilters[OverviewList]}"
                                         ItemFilter="{Binding CurrentItemFilters[OverviewList], Mode=TwoWay}"
                                         ButtonText="{x:Static properties:Resources.CreateOverviewListString}"
                                         SuccessText="{x:Static properties:Resources.CreateOverviewListResultString}"
                                         ButtonIconGlyph="&#xE9D5;"
                                         NumberCreatedDocuments="-1"/>
        
        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Race Start List -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="2"
                                         DocumentType="{x:Static coreModels:DocumentCreationTypes.RaceStartList}"
                                         CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                         IsRunning="{Binding IsDocumentCreationRunning[RaceStartList]}"
                                         IsSuccessful="{Binding IsDocumentCreationSuccessful[RaceStartList]}"
                                         IsDataAvailable="{Binding IsDocumentDataAvailable[RaceStartList]}"
                                         IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[RaceStartList]}"
                                         LastCreatedDocumentPath="{Binding LastDocumentFilePaths[RaceStartList]}"
                                         AvailableItemOrderings="{Binding AvailableItemOrderings[RaceStartList]}"
                                         ItemOrdering="{Binding CurrentItemOrderings[RaceStartList], Mode=TwoWay}"
                                         AvailableItemFilters="{Binding AvailableItemFilters[RaceStartList]}"
                                         ItemFilter="{Binding CurrentItemFilters[RaceStartList], Mode=TwoWay}"
                                         ButtonText="{x:Static properties:Resources.CreateRaceStartListString}"
                                         SuccessText="{x:Static properties:Resources.CreateRaceStartListResultString}"
                                         ButtonIconGlyph="&#xE7C1;"
                                         NumberCreatedDocuments="-1"/>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Time Forms -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="3"
                                 DocumentType="{x:Static coreModels:DocumentCreationTypes.TimeForms}"
                                 CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                 IsRunning="{Binding IsDocumentCreationRunning[TimeForms]}"
                                 IsSuccessful="{Binding IsDocumentCreationSuccessful[TimeForms]}"
                                 IsDataAvailable="{Binding IsDocumentDataAvailable[TimeForms]}"
                                 IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[TimeForms]}"
                                 LastCreatedDocumentPath="{Binding LastDocumentFilePaths[TimeForms]}"
                                 AvailableItemOrderings="{Binding AvailableItemOrderings[TimeForms]}"
                                 ItemOrdering="{Binding CurrentItemOrderings[TimeForms], Mode=TwoWay}"
                                 AvailableItemFilters="{Binding AvailableItemFilters[TimeForms]}"
                                 ItemFilter="{Binding CurrentItemFilters[TimeForms], Mode=TwoWay}"
                                 ButtonText="{x:Static properties:Resources.CreateTimeFormsString}"
                                 SuccessText="{x:Static properties:Resources.CreateTimeFormsResultString}"
                                 ButtonIconGlyph="&#xE916;"
                                 NumberCreatedDocuments="{Binding NumberCreatedTimeForms}"/>
        
        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Result List -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="4"
                                         DocumentType="{x:Static coreModels:DocumentCreationTypes.ResultList}"
                                         CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                         IsRunning="{Binding IsDocumentCreationRunning[ResultList]}"
                                         IsSuccessful="{Binding IsDocumentCreationSuccessful[ResultList]}"
                                         IsDataAvailable="{Binding IsDocumentDataAvailable[ResultList]}"
                                         IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[ResultList]}"
                                         LastCreatedDocumentPath="{Binding LastDocumentFilePaths[ResultList]}"
                                         AvailableItemOrderings="{Binding AvailableItemOrderings[ResultList]}"
                                         ItemOrdering="{Binding CurrentItemOrderings[ResultList], Mode=TwoWay}"
                                         AvailableItemFilters="{Binding AvailableItemFilters[ResultList]}"
                                         ItemFilter="{Binding CurrentItemFilters[ResultList], Mode=TwoWay}"
                                         ButtonText="{x:Static properties:Resources.CreateResultListString}"
                                         SuccessText="{x:Static properties:Resources.CreateResultListResultString}"
                                         ButtonIconGlyph="&#xE9F9;"
                                         NumberCreatedDocuments="-1"/>

        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Create Result List Details -->
        <local:CreateDocumentUserControl Grid.Row="1" Grid.Column="5"
                                        DocumentType="{x:Static coreModels:DocumentCreationTypes.ResultListDetail}"
                                        CreateDocumentCommand="{Binding CreateDocumentCommand}"
                                        IsRunning="{Binding IsDocumentCreationRunning[ResultListDetail]}"
                                        IsSuccessful="{Binding IsDocumentCreationSuccessful[ResultListDetail]}"
                                        IsDataAvailable="{Binding IsDocumentDataAvailable[ResultListDetail]}"
                                        IsTemplateAvailable="{Binding IsDocumentTemplateAvailable[ResultListDetail]}"
                                        LastCreatedDocumentPath="{Binding LastDocumentFilePaths[ResultListDetail]}"
                                        AvailableItemOrderings="{Binding AvailableItemOrderings[ResultListDetail]}"
                                        ItemOrdering="{Binding CurrentItemOrderings[ResultListDetail], Mode=TwoWay}"
                                        AvailableItemFilters="{Binding AvailableItemFilters[ResultListDetail]}"
                                        ItemFilter="{Binding CurrentItemFilters[ResultListDetail], Mode=TwoWay}"
                                        ButtonText="{x:Static properties:Resources.CreateResultListDetailString}"
                                        SuccessText="{x:Static properties:Resources.CreateResultListDetailResultString}"
                                        ButtonIconGlyph="&#xE7B3;"
                                        NumberCreatedDocuments="-1"/>
        
        <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
        <!-- Placeholder Info-->
        <Expander Grid.Row="2" Grid.Column="0" Margin="0,10,0,0" Grid.ColumnSpan="6" HorizontalAlignment="Left" VerticalAlignment="Bottom" IsExpanded="True" controls:ControlsHelper.ContentCharacterCasing="Normal">
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontSize="25" Text="%...%"/>
                    <TextBlock Margin="10,0,0,0" VerticalAlignment="Center" Text="{x:Static properties:Resources.AvailablePlaceholdersString}"/>
                </StackPanel>
            </Expander.Header>

            <DockPanel LastChildFill="True">
                <!-- Legend -->
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="0,20,0,10">
                    <ContentControl Template="{StaticResource ControlTemplateOkIndicator}"/>
                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{x:Static properties:PlaceholderResources.PlaceholderLegendAvailable}"/>

                    <controls:Badged Margin="30,0,0,0" Badge="3" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                        <ContentControl Template="{StaticResource ControlTemplateOkIndicator}"/>
                    </controls:Badged>
                    <TextBlock Margin="15,0,0,0" VerticalAlignment="Center" Text="{x:Static properties:PlaceholderResources.PlaceholderLegendAvailableWithPostfix}"/>

                    <ContentControl Margin="30,0,0,0" Template="{StaticResource ControlTemplateErrorIndicator}"/>
                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{x:Static properties:PlaceholderResources.PlaceholderLegendNotAvailable}"/>
                </StackPanel>

                <Separator Margin="0,10,0,0" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="4"/>

                <DataGrid ItemsSource="{Binding PlaceholderViewConfigs}" AutoGenerateColumns="False" CanUserAddRows="False"
                          behaviors:DataGridBehavior.DisplayRowNumber="True" HeadersVisibility="Column" SelectionMode="Single" CanUserReorderColumns="False"
                          ColumnHeaderStyle="{StaticResource DataGridColumnHeaderCenteringStyle}">
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            <Setter Property="BorderThickness" Value="0,2,0,0"/>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <!-- Placeholder Name -->
                        <DataGridTextColumn Header="{x:Static properties:Resources.NameString}" HeaderStyle="{StaticResource DataGridColumnHeaderLeftStyle}"
                                            Binding="{Binding Name}" IsReadOnly="True"/>

                        <!-- Placeholder Info -->
                        <DataGridTextColumn Header="{x:Static properties:Resources.InfoString}" HeaderStyle="{StaticResource DataGridColumnHeaderLeftStyle}"
                                            Binding="{Binding Info}" IsReadOnly="True"/>

                        <!-- Placeholders -->
                        <DataGridTextColumn Header="{x:Static properties:Resources.AvailablePlaceholdersString}" HeaderStyle="{StaticResource DataGridColumnHeaderLeftStyle}"
                                            Binding="{Binding Placeholders}" IsReadOnly="True"/>

                        <!-- Supported Placeholders for Certificates Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[Certificates]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE8A5;" ToolTip="{x:Static properties:Resources.CreateCertificatesString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[Certificates]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                    FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                    BoolValue="{Binding IsSupportedForDocumentType[Certificates]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Supported Placeholders for OverviewList Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[OverviewList]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE9D5;" ToolTip="{x:Static properties:Resources.CreateOverviewListString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[OverviewList]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                    FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                    BoolValue="{Binding IsSupportedForDocumentType[OverviewList]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Supported Placeholders for RaceStartList Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[RaceStartList]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE7C1;" ToolTip="{x:Static properties:Resources.CreateRaceStartListString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[RaceStartList]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                    FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                    BoolValue="{Binding IsSupportedForDocumentType[RaceStartList]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Supported Placeholders for TimeForms Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[TimeForms]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE916;" ToolTip="{x:Static properties:Resources.CreateTimeFormsString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[TimeForms]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                    FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                    BoolValue="{Binding IsSupportedForDocumentType[TimeForms]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Supported Placeholders for ResultList Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[ResultList]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE9F9;" ToolTip="{x:Static properties:Resources.CreateResultListString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[ResultList]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                    FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                    BoolValue="{Binding IsSupportedForDocumentType[ResultList]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!-- Supported Placeholders for ResultListDetail Document Type -->
                        <DataGridTemplateColumn SortMemberPath="IsSupportedForDocumentType[ResultListDetail]" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <controls:FontIcon Glyph="&#xE7B3;" ToolTip="{x:Static properties:Resources.CreateResultListDetailString}"/>
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <controls:Badged HorizontalAlignment="Center" Badge="{Binding PostfixNumbersSupportedForDocumentType[ResultListDetail]}" BadgeBackground="{DynamicResource MahApps.Brushes.Accent}" BadgePlacementMode="BottomRight">
                                        <userControls:BoolTemplateContentControl TrueTemplate="{StaticResource ControlTemplateOkIndicator}"
                                                                                     FalseTemplate="{StaticResource ControlTemplateErrorIndicator}"
                                                                                     BoolValue="{Binding IsSupportedForDocumentType[ResultListDetail]}"/>
                                    </controls:Badged>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </Expander>
        
    </Grid>
</Page>
