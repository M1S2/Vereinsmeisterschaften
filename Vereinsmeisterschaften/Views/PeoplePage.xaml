<Page
    x:Class="Vereinsmeisterschaften.Views.PeoplePage"
    Style="{DynamicResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:properties="clr-namespace:Vereinsmeisterschaften.Properties"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:Vereinsmeisterschaften.Converters"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="1200">
    <Page.Resources>
        <converters:BooleanToStringConverter x:Key="boolStringConverter" TrueString="X" FalseString=""/>
        <converters:BooleanToStringConverter x:Key="boolStringConverterIsEditButton" TrueString="&#xE73E;" FalseString="&#xE70F;"/>

        <Style TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource MahApps.Styles.GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
        </Style>

        <!-- https://stackoverflow.com/questions/2911626/dynamically-display-a-control-depending-on-bound-property-using-wpf -->
        <Style x:Key="TypedValueHelper" TargetType="{x:Type ContentControl}">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Name}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsInEditMode}" Value="True">
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Name}"/>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition Height="*" />
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <TextBlock Style="{StaticResource PageTitleStyle}" Margin="{StaticResource MediumLeftMargin}" Text="{x:Static properties:Resources.PeoplePageTitle}" />

        <ListView Grid.Row="1" ItemsSource="{Binding People}" Margin="{StaticResource MediumLeftTopRightBottomMargin}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem" BasedOn="{StaticResource MahApps.Styles.ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="40"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding PersonID}" Width="70">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="#" Margin="5" FontSize="{StaticResource XLargeFontSize}"/>
                                <TextBlock Text="{x:Static properties:Resources.PersonIDString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn Width="120">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                                <TextBlock Text="{x:Static properties:Resources.NameString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>
                        </GridViewColumn.Header>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentControl Content="{Binding}" Style="{StaticResource TypedValueHelper}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding FirstName}" Width="120">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                                <TextBlock Text="{x:Static properties:Resources.FirstNameString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Gender, Converter={StaticResource enumLocalizedStringConverter}}" Width="120">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                                <TextBlock Text="{x:Static properties:Resources.GenderString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding BirthYear}" Width="120">
                        <GridViewColumn.Header>
                            <StackPanel Orientation="Horizontal">
                                <controls:FontIcon Glyph="&#xED55;" Margin="5"/>
                                <TextBlock Text="{x:Static properties:Resources.BirthYearString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                            </StackPanel>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Breaststroke, Converter={StaticResource boolStringConverter}}" Width="90">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.BreaststrokeString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Freestyle, Converter={StaticResource boolStringConverter}}" Width="90">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.FreestyleString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Backstroke, Converter={StaticResource boolStringConverter}}" Width="90">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.BackstrokeString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Butterfly, Converter={StaticResource boolStringConverter}}" Width="90">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.ButterflyString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Medley, Converter={StaticResource boolStringConverter}}" Width="90">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.MedleyString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding WaterFlea, Converter={StaticResource boolStringConverter}}" Width="110">
                        <GridViewColumn.Header>
                            <TextBlock Text="{x:Static properties:Resources.WaterFleaString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </GridViewColumn.Header>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button x:Name="DetailsButton" Margin="0,1,0,1" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Background="{StaticResource MahApps.Brushes.Gray2}"
                                        Visibility="Hidden" Width="30" Height="30" 
                                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.EditPersonCommand}" CommandParameter="{Binding}">
                                    <controls:FontIcon FontSize="15" Glyph="{Binding IsInEditMode, Converter={StaticResource boolStringConverterIsEditButton}}"/>
                                </Button>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="DetailsButton" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="DetailsButton" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Button Content="Add Person" Command="{Binding AddPersonCommand}"/>
        </StackPanel>
    </Grid>
</Page>
