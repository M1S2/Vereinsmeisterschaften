<Page
    x:Class="Vereinsmeisterschaften.Views.PeoplePage"
    Style="{DynamicResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:properties="clr-namespace:Vereinsmeisterschaften.Properties"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:Vereinsmeisterschaften.Converters"
    xmlns:behaviors="clr-namespace:Vereinsmeisterschaften.Behaviors"
    xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
    xmlns:coreModels="clr-namespace:Vereinsmeisterschaften.Core.Models;assembly=Vereinsmeisterschaften.Core"
    xmlns:viewModels="clr-namespace:Vereinsmeisterschaften.ViewModels"
    Dialog:DialogParticipation.Register="{Binding}"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="1400">

    <Page.Resources>
        <Style x:Key="DataGridCheckboxCellCenteringStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.DataGrid.Win10}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="20"/>
            <Setter Property="ClickMode" Value="Press"/>
        </Style>

        <SolidColorBrush x:Key="BrushCompetitionMissingAndSelected" Color="{Binding Source={StaticResource BrushError}, Path=Color}"/>
        <SolidColorBrush x:Key="BrushCompetitionMissing" Color="{StaticResource MahApps.Colors.Gray}"/>

        <converters:PersonCompetitionStatusToBrushConverter x:Key="PersonCompetitionStatusBrushConverter"
                                                            BrushCompetitionMissingAndSelected="{StaticResource BrushCompetitionMissingAndSelected}"
                                                            BrushCompetitionMissing="{StaticResource BrushCompetitionMissing}"/>

        <converters:PersonStartToCompetitionIDStringConverter x:Key="PersonStartCompetitionIDStringConverter"/>
    </Page.Resources>

    <Grid Margin="{StaticResource MediumLeftTopRightBottomMargin}">
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center">
            <controls:FontIcon FontSize="40" Glyph="&#xE77B;"/>
            <TextBlock Style="{StaticResource PageTitleStyle}" Text="{x:Static properties:Resources.PeoplePageTitle}" />
            <controls:FontIcon Margin="30,0,0,0" FontSize="25" Glyph="&#xF167;" Foreground="{DynamicResource MahApps.Brushes.Accent}" ToolTip="{x:Static properties:Tooltips.TooltipPageInfoPeoplePage}"/>
        </StackPanel>
        
        <!-- Search Bar -->
        <DockPanel Grid.Row="2" Margin="24,0,24,0">
            <controls:FontIcon DockPanel.Dock="Left" Glyph="&#xF78B;" Margin="5" FontSize="25"/>
            <Button DockPanel.Dock="Right" Command="{Binding ClearFilterCommand}">
                <controls:FontIcon Glyph="&#xF78A;" Margin="10"/>
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Square}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding FilterText}" Value="">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBox HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="{StaticResource LargeFontSize}"/>
        </DockPanel>

        <!-- DataGrid with all people -->
        <DataGrid Grid.Row="3" ItemsSource="{Binding PeopleCollectionView}" Margin="{StaticResource MediumLeftTopRightBottomMargin}" AutoGenerateColumns="False" CanUserAddRows="False"
                  behaviors:DataGridBehavior.DisplayRowNumber="True" HeadersVisibility="All" RowHeaderWidth="20" SelectionMode="Single"
                  SelectedItem="{Binding SelectedPerson}" behaviors:DataGridBehavior.ObserveSelectedItem="{Binding SelectedPerson}"
                  ColumnHeaderStyle="{StaticResource DataGridColumnHeaderCenteringStyle}">
            <!-- Center the row numbers -->
            <DataGrid.RowHeaderStyle>
                <Style TargetType="{x:Type DataGridRowHeader}" BasedOn="{StaticResource MahApps.Styles.DataGridRowHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
            </DataGrid.RowHeaderStyle>
            
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MahApps.Styles.DataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <!-- First Name -->
                <DataGridTextColumn Binding="{Binding FirstName}" ElementStyle="{StaticResource DataGridTextCellCenteringStyle}">
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                            <TextBlock Text="{x:Static properties:Resources.FirstNameString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Name -->
                <DataGridTextColumn Binding="{Binding Name}" ElementStyle="{StaticResource DataGridTextCellCenteringStyle}">
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                            <TextBlock Text="{x:Static properties:Resources.NameString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Gender -->
                <DataGridTemplateColumn SortMemberPath="Gender">
                    <DataGridTemplateColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <controls:FontIcon Glyph="&#xE77B;" Margin="5"/>
                            <TextBlock Text="{x:Static properties:Resources.GenderString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </StackPanel>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding Gender}" HorizontalAlignment="Center" Style="{StaticResource GenderWithIconStyle}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox HorizontalAlignment="Center"
                                      ItemsSource="{Binding Source={StaticResource AvailableGenders}}"
                                      SelectedValue="{Binding Gender}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <ContentControl Content="{Binding}" Style="{StaticResource GenderWithIconStyle}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <!-- Birth Year -->
                <DataGridTextColumn Binding="{Binding BirthYear}" ElementStyle="{StaticResource DataGridTextCellCenteringStyle}">
                    <DataGridTextColumn.Header>
                        <StackPanel Orientation="Horizontal">
                            <controls:FontIcon Glyph="&#xED55;" Margin="5"/>
                            <TextBlock Text="{x:Static properties:Resources.BirthYearString}" VerticalAlignment="Center" FontSize="{StaticResource MediumFontSize}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>

                <!-- Breaststroke -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="Breaststroke">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.Breaststroke}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[Breaststroke]" />
                                        <Binding Path="Breaststroke" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.Breaststroke}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Breaststroke}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[Breaststroke].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[Breaststroke], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[Breaststroke], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[Breaststroke].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Freestyle -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="Freestyle">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.Freestyle}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[Freestyle]" />
                                        <Binding Path="Freestyle" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.Freestyle}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Freestyle}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[Freestyle].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[Freestyle], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[Freestyle], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[Freestyle].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Backstroke -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="Backstroke">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.Backstroke}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[Backstroke]" />
                                        <Binding Path="Backstroke" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.Backstroke}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Backstroke}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[Backstroke].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[Backstroke], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[Backstroke], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[Backstroke].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Butterfly -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="Butterfly">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.Butterfly}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[Butterfly]" />
                                        <Binding Path="Butterfly" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.Butterfly}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Butterfly}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[Butterfly].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[Butterfly], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[Butterfly], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[Butterfly].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- Medley -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="Medley">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.Medley}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[Medley]" />
                                        <Binding Path="Medley" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.Medley}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding Medley}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[Medley].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[Medley], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[Medley], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[Medley].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- WaterFlea -->
                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                <DataGridTemplateColumn SortMemberPath="WaterFlea">
                    <DataGridTemplateColumn.Header>
                        <ContentControl Content="{x:Static coreModels:SwimmingStyles.WaterFlea}" Style="{StaticResource SwimmingStyleWithIconStyle}"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource PersonCompetitionStatusBrushConverter}">
                                        <Binding Path="AvailableCompetitionsFlags[WaterFlea]" />
                                        <Binding Path="WaterFlea" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value="{Binding ., Converter={StaticResource PersonStartCompetitionIDStringConverter}, ConverterParameter={x:Static coreModels:SwimmingStyles.WaterFlea}}"/>
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <CheckBox IsChecked="{Binding WaterFlea}" Style="{StaticResource DataGridCheckboxCellCenteringStyle}"/>
                                <!-- This stack panel contains all icons (without the inactive icon) and is only shown when the start is active -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Starts[WaterFlea].IsActive, FallbackValue=True}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                    <!-- Icon for max. age competition -->
                                    <Path Margin="2,0,0,0" Data="{StaticResource Geometry_AccountTie}" Style="{StaticResource IconStyle}"
                                          Visibility="{Binding IsUsingMaxAgeCompetitionDict[WaterFlea], Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"
                                          ToolTip="{x:Static properties:Tooltips.TooltipMaxAgeCompetition}"/>
                                    <!-- Icon for not exact age competition -->
                                    <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE816;"
                                                       Visibility="{Binding IsUsingExactAgeCompetitionDict[WaterFlea], Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                       ToolTip="{x:Static properties:Tooltips.TooltipNotExactAgeCompetition}"/>
                                </StackPanel>
                                <!-- Icon to indicate if the start is inactive -->
                                <controls:FontIcon Margin="2,0,0,0" Glyph="&#xE7E8;"
                                                   Visibility="{Binding Starts[WaterFlea].IsActive, Converter={StaticResource InvertedBoolVisibilityConverter}, FallbackValue=Collapsed}"
                                                   ToolTip="{x:Static properties:Tooltips.TooltipPersonInactiveStart}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
                
                <!-- Set Person active/inactive Button -->
                <DataGridTemplateColumn Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button x:Name="PersonActiveInactiveButton" Margin="0,1,0,1" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Background="{StaticResource BrushStartInactive}"
                                    Visibility="Hidden" Width="30" Height="30" 
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.PersonActiveInactiveCommand}" CommandParameter="{Binding}"
                                    ToolTip="{x:Static properties:Tooltips.TooltipPersonActiveInactiveButton}">
                                <controls:FontIcon FontSize="15" Glyph="&#xE7E8;"/>
                            </Button>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsMouseOver}" Value="True">
                                    <Setter TargetName="PersonActiveInactiveButton" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True">
                                    <Setter TargetName="PersonActiveInactiveButton" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <!-- Remove Person Button -->
                <DataGridTemplateColumn Width="50">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button x:Name="RemovePersonButton" Margin="0,1,0,1" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" Background="{StaticResource BrushError}"
                                    Visibility="Hidden" Width="30" Height="30" 
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Page}}, Path=DataContext.RemovePersonCommand}" CommandParameter="{Binding}"
                                    ToolTip="{x:Static properties:Resources.RemovePersonString}">
                                <controls:FontIcon FontSize="15" Glyph="&#xE74D;"/>
                            </Button>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsMouseOver}" Value="True">
                                    <Setter TargetName="RemovePersonButton" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=IsSelected}" Value="True">
                                    <Setter TargetName="RemovePersonButton" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <DockPanel Grid.Row="4" LastChildFill="False">
            <!-- Add Person Button -->
            <Button DockPanel.Dock="Left" Margin="{StaticResource MediumLeftTopRightMargin}" Command="{Binding AddPersonCommand}" Style="{StaticResource MahApps.Styles.Button.Square.Accent}" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <controls:FontIcon FontSize="20" Glyph="&#xE8FA;"/>
                    <TextBlock Text="{x:Static properties:Resources.AddNewPerson}" VerticalAlignment="Center" Margin="10,0,0,0"/>
                </StackPanel>
            </Button>
            <StackPanel DockPanel.Dock="Right" Orientation="Vertical" Margin="{StaticResource MediumLeftRightMargin}">
                <Border Background="{StaticResource BrushCompetitionMissing}">
                    <TextBlock Margin="5" Text="{x:Static properties:Resources.CompetitionMissingString}" VerticalAlignment="Center"/>
                </Border>
                <Border Background="{StaticResource BrushCompetitionMissingAndSelected}">
                    <TextBlock Margin="5" Text="{x:Static properties:Resources.CompetitionMissingAndSelectedString}" Foreground="{StaticResource MahApps.Brushes.IdealForeground}" VerticalAlignment="Center"/>
                </Border>
            </StackPanel>
        </DockPanel>
        
        <!-- Duplicate Person Warning -->
        <Expander Grid.Row="5" Margin="{StaticResource MediumLeftTopRightBottomMargin}" IsExpanded="True"
                  controls:HeaderedControlHelper.HeaderBackground="{StaticResource BrushWarning}" BorderBrush="{StaticResource BrushWarning}">
            <Expander.Header>
                <StackPanel Orientation="Horizontal">
                    <controls:FontIcon Glyph="&#xE7BA;" Margin="5"/>
                    <TextBlock Text="{x:Static properties:Resources.DuplicatePersonFound}" VerticalAlignment="Center"/>
                </StackPanel>
            </Expander.Header>
            <TextBlock VerticalAlignment="Center" Text="{Binding DuplicatePersonString}"/>
            <Expander.Style>
                <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource MahApps.Styles.Expander}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DuplicatePersonString}" Value="">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
        </Expander>
    </Grid>
</Page>
